# set-option -g default-command "reattach-to-user-namespace -l bash"
set-option -g set-titles on
set-option -g set-titles-string "#{session_name} - #{host}"
set-option -g mouse on
set -g default-terminal "screen-256color" # colors!

# list of plugins
#set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'tmux-plugins/tmux-sensible'

# this version works on just vim/tmux
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#
#
# bind-key -n C-h  if-shell  "$is_vim"  "send-keys C-h"  "select-pane -L"
# bind-key -n C-j   if-shell  "$is_vim"  "send-keys C-j"   "select-pane -D"
# bind-key -n C-k  if-shell  "$is_vim"  "send-keys C-k"  "select-pane -U"
# bind-key -n C-l   if-shell  "$is_vim"  "send-keys C-l"   "select-pane -R"
# bind-key -n C-\   if-shell  "$is_vim"  "send-keys C-\\"  "select-pane -l"

# this version also works on fzf
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

# bind -n C-h run "($is_vim && tmux send-keys C-h) || \
#                           ([[ $(tmux list-panes -F'#{window_panes}' | head -n 1) -gt "1" ]] && tmux select-pane -L) || \
#                           tmux select-window -p"
#
# bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
#                          ($is_fzf && tmux send-keys C-j) || \
#                          tmux select-pane -D"
#
# bind -n C-k run "($is_vim && tmux send-keys C-k) || \
#                           ($is_fzf && tmux send-keys C-k)  || \
#                           tmux select-pane -U"
#
# bind -n C-l run  "($is_vim && tmux send-keys C-l) || \
#                           ([[ $(tmux list-panes -F'#{window_panes}' | head -n 1) -gt "1" ]] && tmux select-pane -R) || \
#                           tmux select-window -n"
#
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
#
# bind -T prefix h run "([[ $(tmux list-panes -F'#{window_panes}' | head -n 1) -gt "1" ]] && tmux select-pane -L) || \
#                           tmux select-window -p"
#
# bind -T prefix j run "($is_fzf && tmux send-keys C-j) || \
#                          tmux select-pane -D"
#
# bind -T prefix k run "($is_fzf && tmux send-keys C-k)  || \
#                           tmux select-pane -U"
#
# bind -T prefix l run "([[ $(tmux list-panes -F'#{window_panes}' | head -n 1) -gt "1" ]] && tmux select-pane -R) || \
#                           tmux select-window -n"
#
bind-key -T prefix , command-prompt "rename-window '%%'"

bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'
